<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cjh.cisdi.test.tinywebapplication.mapper.DataAnalyzeMapper" >
  <resultMap id="BaseResultMap" type="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyze" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="file_recordid" property="fileRecordid" jdbcType="INTEGER" />
    <result column="column_name" property="columnName" jdbcType="VARCHAR" />
    <result column="column_type" property="columnType" jdbcType="INTEGER" />
    <result column="avg" property="avg" jdbcType="DECIMAL" />
    <result column="std" property="std" jdbcType="DECIMAL" />
    <result column="ns" property="ns" jdbcType="INTEGER" />
    <result column="factor" property="factor" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, file_recordid, column_name, column_type, avg, std, ns, factor, createtime, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyzeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_analyze
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from data_analyze
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from data_analyze
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyzeExample" >
    delete from data_analyze
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyze" >
    insert into data_analyze (id, file_recordid, column_name, 
      column_type, avg, std, 
      ns, factor, createtime, 
      updatetime)
    values (#{id,jdbcType=INTEGER}, #{fileRecordid,jdbcType=INTEGER}, #{columnName,jdbcType=VARCHAR}, 
      #{columnType,jdbcType=INTEGER}, #{avg,jdbcType=DECIMAL}, #{std,jdbcType=DECIMAL}, 
      #{ns,jdbcType=INTEGER}, #{factor,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyze" >
    insert into data_analyze
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileRecordid != null" >
        file_recordid,
      </if>
      <if test="columnName != null" >
        column_name,
      </if>
      <if test="columnType != null" >
        column_type,
      </if>
      <if test="avg != null" >
        avg,
      </if>
      <if test="std != null" >
        std,
      </if>
      <if test="ns != null" >
        ns,
      </if>
      <if test="factor != null" >
        factor,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileRecordid != null" >
        #{fileRecordid,jdbcType=INTEGER},
      </if>
      <if test="columnName != null" >
        #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnType != null" >
        #{columnType,jdbcType=INTEGER},
      </if>
      <if test="avg != null" >
        #{avg,jdbcType=DECIMAL},
      </if>
      <if test="std != null" >
        #{std,jdbcType=DECIMAL},
      </if>
      <if test="ns != null" >
        #{ns,jdbcType=INTEGER},
      </if>
      <if test="factor != null" >
        #{factor,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyzeExample" resultType="java.lang.Integer" >
    select count(*) from data_analyze
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update data_analyze
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileRecordid != null" >
        file_recordid = #{record.fileRecordid,jdbcType=INTEGER},
      </if>
      <if test="record.columnName != null" >
        column_name = #{record.columnName,jdbcType=VARCHAR},
      </if>
      <if test="record.columnType != null" >
        column_type = #{record.columnType,jdbcType=INTEGER},
      </if>
      <if test="record.avg != null" >
        avg = #{record.avg,jdbcType=DECIMAL},
      </if>
      <if test="record.std != null" >
        std = #{record.std,jdbcType=DECIMAL},
      </if>
      <if test="record.ns != null" >
        ns = #{record.ns,jdbcType=INTEGER},
      </if>
      <if test="record.factor != null" >
        factor = #{record.factor,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update data_analyze
    set id = #{record.id,jdbcType=INTEGER},
      file_recordid = #{record.fileRecordid,jdbcType=INTEGER},
      column_name = #{record.columnName,jdbcType=VARCHAR},
      column_type = #{record.columnType,jdbcType=INTEGER},
      avg = #{record.avg,jdbcType=DECIMAL},
      std = #{record.std,jdbcType=DECIMAL},
      ns = #{record.ns,jdbcType=INTEGER},
      factor = #{record.factor,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyze" >
    update data_analyze
    <set >
      <if test="fileRecordid != null" >
        file_recordid = #{fileRecordid,jdbcType=INTEGER},
      </if>
      <if test="columnName != null" >
        column_name = #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnType != null" >
        column_type = #{columnType,jdbcType=INTEGER},
      </if>
      <if test="avg != null" >
        avg = #{avg,jdbcType=DECIMAL},
      </if>
      <if test="std != null" >
        std = #{std,jdbcType=DECIMAL},
      </if>
      <if test="ns != null" >
        ns = #{ns,jdbcType=INTEGER},
      </if>
      <if test="factor != null" >
        factor = #{factor,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cjh.cisdi.test.tinywebapplication.dao.DataAnalyze" >
    update data_analyze
    set file_recordid = #{fileRecordid,jdbcType=INTEGER},
      column_name = #{columnName,jdbcType=VARCHAR},
      column_type = #{columnType,jdbcType=INTEGER},
      avg = #{avg,jdbcType=DECIMAL},
      std = #{std,jdbcType=DECIMAL},
      ns = #{ns,jdbcType=INTEGER},
      factor = #{factor,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>